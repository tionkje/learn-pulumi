// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsZones(args?: GetDnsZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsZonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hetzner:index/getDnsZones:getDnsZones", {
        "name": args.name,
        "zones": args.zones,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsZones.
 */
export interface GetDnsZonesArgs {
    name?: string;
    zones?: inputs.GetDnsZonesZone[];
}

/**
 * A collection of values returned by getDnsZones.
 */
export interface GetDnsZonesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly zones?: outputs.GetDnsZonesZone[];
}
export function getDnsZonesOutput(args?: GetDnsZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsZonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("hetzner:index/getDnsZones:getDnsZones", {
        "name": args.name,
        "zones": args.zones,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsZones.
 */
export interface GetDnsZonesOutputArgs {
    name?: pulumi.Input<string>;
    zones?: pulumi.Input<pulumi.Input<inputs.GetDnsZonesZoneArgs>[]>;
}
